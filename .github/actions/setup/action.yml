name: Setup action
description: Setup build action
inputs:
  arch:
    description: 'Target architecture (x64 or x86)'
    required: true
    default: 'x64'
runs:
  using: "composite"
  steps:
    - uses: hustcer/setup-nu@main
      with:
        version: "*"

    - name: Setup MSVC Environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ inputs.arch == 'x86' && 'x86' || 'x64' }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Restore depot_tools cache
      uses: actions/cache/restore@v4
      id: restore-depot-tools-cache
      with:
        path: depot_tools
        key: Windows-depot-tools

    - name: Setup depot tools manually
      shell: pwsh
      run: |
        if (Test-Path depot_tools) {
          cd depot_tools
          git reset --hard HEAD
          git clean -fd
          cd ..
        } else {
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        }
        echo "$env:GITHUB_WORKSPACE/depot_tools" >> $env:GITHUB_PATH
        
    - name: Configure git for depot_tools
      shell: pwsh
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git config --global depot-tools.allowGlobalGitConfig true

    - name: Setup PATH and ENV
      shell: nu {0}
      run: |
        let arch = "${{ inputs.arch }}"
        [
            $"SkiaSharpName=libSkiaSharp-($env.SkiaSharpVersion)-($arch)-($env.UCRTVersion)"
            $"HarfBuzzSharpName=libHarfBuzzSharp-($env.SkiaSharpVersion)-($arch)-($env.UCRTVersion)"
            $"BuildDir=($env.GITHUB_WORKSPACE)/out/windows/($arch)"
            $"TargetArch=($arch)"
        ] | str join (char newline) | save --append $env.GITHUB_ENV
        
        # Add newline separator to prevent variable concatenation
        "" | save --append $env.GITHUB_ENV
        
        # Set additional environment variables for native compilation
        if ($arch == "x86") {
            # Add newline before x86 specific variables
            "" | save --append $env.GITHUB_ENV
            [
                "CC_target=clang-cl"
                "CXX_target=clang-cl" 
                "AR_target=llvm-lib"
                "target_cpu=x86"
                "PROCESSOR_ARCHITECTURE=x86"
                "PROCESSOR_ARCHITEW6432="
                "VSCMD_ARG_HOST_ARCH=x86"
                "VSCMD_ARG_TGT_ARCH=x86"
            ] | str join (char newline) | save --append $env.GITHUB_ENV
        } else {
            # Add newline before x64 specific variables
            "" | save --append $env.GITHUB_ENV
            [
                "VSCMD_ARG_HOST_ARCH=x64"
                "VSCMD_ARG_TGT_ARCH=x64"
            ] | str join (char newline) | save --append $env.GITHUB_ENV
        }
